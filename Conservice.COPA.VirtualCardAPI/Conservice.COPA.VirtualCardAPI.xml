<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Conservice.COPA.VirtualCardAPI</name>
    </assembly>
    <members>
        <member name="T:Conservice.COPA.VirtualCardAPI.ConfigureSwaggerOptions">
            <summary>
            Configures the Swagger generation options.
            </summary>
            <remarks>This allows API versioning to define a Swagger document per API version after the
            <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider"/> service has been resolved from the service container.</remarks>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.ConfigureSwaggerOptions.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Conservice.COPA.VirtualCardAPI.ConfigureSwaggerOptions"/> class.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider">provider</see> used to generate Swagger documents.</param>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <inheritdoc />
        </member>
        <member name="T:Conservice.COPA.VirtualCardAPI.Controllers.V2.ConserviceController">
            <summary>
            Controller used to handle CSI api calls.
            </summary>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.Controllers.V2.ConserviceController.#ctor(COPA.APIManager.BLL.Clients.Conservice.ConserviceApiManager,Payment.Portal.CL.Utilities.Interfaces.IClaimsPrincipalService,Microsoft.Extensions.Logging.ILogger{Conservice.COPA.VirtualCardAPI.Controllers.V2.ConserviceController})">
            <summary>
            Default constructor. Initializes fields through DI
            </summary>
            <param name="conserviceApiManager">Instance used to communicate with the client VirtualCard API</param>
            <param name="claimsPrincipalService"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.Controllers.V2.ConserviceController.CreateCard(Conservice.COPA.VirtualCardAPI.Models.Request.CreateCardRequest)">
            <summary>
            Interacts with the CSI VCard API to create a virtual card.
            </summary>
            <param name="request">Object representation of the JSON body of the request.</param>
            <returns>IVirtualCard response object.</returns>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.Controllers.V2.ConserviceController.GetCardInformation(System.String,System.String)">
            <summary>
            Sends an API call to CSI to retrieve information for a specified Conservice credit card.
            </summary>
            <param name="clientID">The unique identifier associated to a Conservice client.</param>
            <param name="cardID">The id of the card we are trying to receive information for.</param>
            <returns>IVirtualCard response object.</returns>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.Controllers.V2.ConserviceController.BlockCard(System.String,System.String)">
            <summary>
            Sends an API call to CSI to block the given card
            </summary>
            <param name="clientID">The unique identifier associated to a Conservice client.</param>
            <param name="cardID">The id of the card we are trying to receive information for.</param>
            <returns>IVirtualCard response object.</returns>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.Controllers.V2.ConserviceController.UpdateCardInformation(Conservice.COPA.VirtualCardAPI.Models.Request.UpdateCardRequest)">
            <summary>
            Sends an API call to CSI to update a card's information or allowed amount for a given id
            </summary>
            <param name="request">Contains card information and what amount it should be updated to</param>
            <returns>IVirtual Card response</returns>
        </member>
        <member name="T:Conservice.COPA.VirtualCardAPI.Controllers.V2.ThrottleController">
            <summary>
            Controller used to allow runtime management of CSI throttling policies.
            </summary>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.Controllers.V2.ThrottleController.#ctor(COPA.APIManager.BLL.Interface.ICSIRateCompliance,Microsoft.Extensions.Logging.ILogger{Conservice.COPA.VirtualCardAPI.Controllers.V2.ThrottleController})">
            <summary>
            Default constructor. Initializes fields through DI
            </summary>
            <param name="csiRateCompliance"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.Controllers.V2.ThrottleController.GetApiConstraints">
            <summary>
            Sends an API call to CSI to retrieve information for a specified Conservice credit card.
            </summary>
            <returns>IVirtualCard response object.</returns>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.Controllers.V2.ThrottleController.UpdateApiConstraints(COPA.APIManager.BLL.Clients.Conservice.CSIConstraints)">
            <summary>
            Sends an API call to CSI to block the given card
            </summary>
            <param name="constraints"></param>
            <returns>IVirtualCard response object.</returns>
        </member>
        <member name="T:Conservice.COPA.VirtualCardAPI.Models.Request.CreateCardRequest">
            <summary>
            Contains the information required to create a virtual card.
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Request.CreateCardRequest.ClientID">
            <summary>
            Unique identifier associated to COPA clients.
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Request.CreateCardRequest.Amount">
            <summary>
            The amount of the card to be created.
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Request.CreateCardRequest.FirstName">
            <summary>
            First name of the person who will use the card
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Request.CreateCardRequest.LastName">
            <summary>
            Last name of the person who will use the card
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Request.CreateCardRequest.Notes">
            <summary>
            Additional notes assigned to a virtual card request.
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Request.CreateCardRequest.Pin">
            <summary>
            Payment Identification Number
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Request.CreateCardRequest.SupplierID">
            <summary>
            Identifier used to send to CSI for BIN rotation.
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Request.CreateCardRequest.BinRotation">
            <summary>
            Setting used to send to CSI for BIN rotation.
            </summary>
        </member>
        <member name="T:Conservice.COPA.VirtualCardAPI.Models.Request.UpdateCardRequest">
            <summary>
            Contains information required to update values for a given virtual card
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Request.UpdateCardRequest.VirtualCardID">
            <summary>
            Id of the card that will be updated
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Request.UpdateCardRequest.ClientID">
            <summary>
            Identifies which client/company the card is tied to
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Request.UpdateCardRequest.Amount">
            <summary>
            Amount the card should be set to now
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Request.UpdateCardRequest.FirstName">
            <summary>
            First name the card should be set to
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Request.UpdateCardRequest.LastName">
            <summary>
            Last name the card should be set to
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Request.UpdateCardRequest.Notes">
            <summary>
            Notes misc details tied to card
            </summary>
        </member>
        <member name="T:Conservice.COPA.VirtualCardAPI.Models.Response.TokenResponse">
            <summary>
            Data returned in response to the Token action
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Response.TokenResponse.AccessToken">
            <summary>
            Bearer token for authentication.
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Response.TokenResponse.AccessExpirationAt">
            <summary>
            The date and time the AccessToken expires.
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Response.TokenResponse.RefreshToken">
            <summary>
            Refresh token to refresh access token.
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Models.Response.TokenResponse.RefreshExpirationAt">
            <summary>
            The date and time the RefreshToken expires.
            </summary>
        </member>
        <member name="T:Conservice.COPA.VirtualCardAPI.Program">
            <summary>
            Beginning class of application.
            </summary>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.Program.Main">
            <summary>
            Main entry point of application.
            </summary>
        </member>
        <member name="T:Conservice.COPA.VirtualCardAPI.Startup">
            <summary>
            Initializes the requirements for the website
            </summary>
        </member>
        <member name="P:Conservice.COPA.VirtualCardAPI.Startup.Configuration">
            <summary>
            Configures the services that will be used.
            </summary>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Default constructor
            </summary>
            <param name="configuration">The configuration parameters provided by the launchSettings.json file.</param>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">Defines a class that provides the mechanisms to configure an application's request.</param>
            <param name="env">Provides information about the web hosting environment an application is running in.</param>
            <param name="provider">Defines the behavior of a provider that discovers and describes API version information with an application.</param>
        </member>
        <member name="T:Conservice.COPA.VirtualCardAPI.SwaggerDefaultValues">
            <summary>
            Represents the Swagger/Swashbuckle operation filter used to document the implicit API version parameter.
            </summary>
            <remarks>This <see cref="T:Swashbuckle.AspNetCore.SwaggerGen.IOperationFilter"/> is only required due to bugs in the <see cref="T:Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator"/>.
            Once they are fixed and published, this class can be removed.</remarks>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.SwaggerDefaultValues.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Applies the filter to the specified operation using the given context.
            </summary>
            <param name="operation">The operation to apply the filter to.</param>
            <param name="context">The current operation filter context.</param>
        </member>
        <member name="T:Conservice.COPA.VirtualCardAPI.Util.AppInfoHealthCheck">
            <summary>
            Health Check with Application Info.
            </summary>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.Util.AppInfoHealthCheck.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="config"><see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
        </member>
        <member name="M:Conservice.COPA.VirtualCardAPI.Util.AppInfoHealthCheck.CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext,System.Threading.CancellationToken)">
            <summary>
            Checks the application health.
            </summary>
            <param name="context"><see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext"/></param>
            <param name="cancellationToken"><see cref="T:System.Threading.CancellationToken"/></param>
            <returns><see cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult"/></returns>
        </member>
        <member name="T:Payment.Portal.API.Extensions.ClaimsPrincipalExtensions">
            <summary>
            Extension methods for handling ClaimsPrincipal logic
            </summary>
        </member>
        <member name="M:Payment.Portal.API.Extensions.ClaimsPrincipalExtensions.AuthorizedParty(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Retrieves the EmployeeID from the <paramref name="claimsPrincipal"/>
            </summary>
            <param name="claimsPrincipal">Instance of <see cref="T:System.Security.Claims.ClaimsPrincipal"/> to retrieve properties from</param>
            <returns></returns>
        </member>
        <member name="T:Payment.Portal.API.Auth.JwtClaimsPrincipalService">
            <summary>
            Implementation of <see cref="T:Payment.Portal.CL.Utilities.Interfaces.IClaimsPrincipalService"/>
            </summary>
        </member>
        <member name="M:Payment.Portal.API.Auth.JwtClaimsPrincipalService.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Constructor
            </summary>
            <param name="httpContextAccessor">Instance of httpContextAccessor object</param>
            <param name="paymentUserManager">Instance of PaymentUserManager</param>
            <param name="keycloakService">Instance of KeycloakService -> manages getting authentication tokens</param>
        </member>
        <member name="M:Payment.Portal.API.Auth.JwtClaimsPrincipalService.GetAccessToken">
            <inheritdoc/>
        </member>
        <member name="T:Payment.Portal.CL.Utilities.Interfaces.IClaimsPrincipalService">
            <summary>
            Interface for handling ClaimsPrincipal logic
            </summary>
        </member>
        <member name="M:Payment.Portal.CL.Utilities.Interfaces.IClaimsPrincipalService.GetAuthorizedParty">
            <summary>
            Get the value of the azp claim
            </summary>
        </member>
        <member name="M:Payment.Portal.CL.Utilities.Interfaces.IClaimsPrincipalService.GetAccessToken">
            <summary>
            Gets the bearer token value from the HttpContext headers
            </summary>
        </member>
    </members>
</doc>
